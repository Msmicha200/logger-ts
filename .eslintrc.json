{
    "root": true,
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "prettier"
    ],
    "parser": "@typescript-eslint/parser",
    "plugins": ["@typescript-eslint"],
    "parserOptions": {
        "project": ["./tsconfig.json"]
    },
    "env": {
        "browser": true
    },
    "rules": {
        "indent": ["error", 4],
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/array-type": "error",
        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/no-floating-promises": "warn",
        "@typescript-eslint/no-use-before-define": "error",
        "@typescript-eslint/prefer-reduce-type-parameter": "error",
        "@typescript-eslint/ban-types": "error",
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "enum",
                "format": ["PascalCase"]
            },
            {
                "selector": "enumMember",
                "format": ["UPPER_CASE", "strictCamelCase"]
            },
            {
                "selector": "interface",
                "format": ["PascalCase"]
            },
            {
                "selector": "variable",
                "format": ["strictCamelCase"]
            },
            {
                "selector": "function",
                "format": ["strictCamelCase"]
            },
            {
                "selector": "typeAlias",
                "format": ["StrictPascalCase"]
            }
        ],
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-for-in-array": "error",
        // "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/prefer-literal-enum-member": "error",
        "@typescript-eslint/prefer-optional-chain": "error"
    }
}
